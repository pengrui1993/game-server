components:
gate
bus
auth
users
logics
config

monitor
----
db mq cache 
----
C->G byte stream
G->C byte stream

user to gate user byte stream like protobuf
service syncing query use http to get json
service send and listen message of mq using json
----
gate query state of server's component by bus
gate send server's event to mq by bus and pass by http
gate listen server's event by mq

bus notify server's event to gate ath users logics and config if it is cared
bus provide a sync write,mq provide a async write
mod1:all syc query pass bus
mod2:bus supply a api to query others api of location of server node
    and bus notify the event to sync changing about server node
---
duty and ability
gate: for keep the session and hold 1.login info,2.user info
bus: event dispatcher
auths:to authenticate the role from connection
users:user manager for store user's info
logics:logic manager for manage all room
---
master	service... 	action from master to service
gate	bus		write message read(listen) the message	
gate	auths			


------
server is plugin architecture
bus dep:mq db
config dep:mq db
auth dep:mq db users config
users dep:mq db config
logics dep:mq db auth users config
gate dep:bus config auth users logics

monitor dep:bus config auth users logics gate db



------
db mysql
cache redis
mq rabbitmq
